L7.7
Note: in AWS only one environment with one EC2 instance is free,
if we want to create multiple environments or more things than it will be charged.


if we only use @SpringBootTest with WebTestClient then it will not work with error: Error creating bean of WebTestClient,
since SpringBootTest creates a mock server (due "mock" port configured as default in "webEnvironment")
but to run WebTestClient we need to run a real server.
to create and run a real http server configure the port using "webEnvironment" attribute of @SpringBootTest
Eg: @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)

Shift+Fn+F6 -> to use refractor to enable all instances of a variable

echo $JAVA_HOME - to check java version in terminal

cmd+, -> to open settings in intellij and configure java version to create jar file accordingly

cmd+ : -> to open Project structure

Always perform clean operation using maven before creating a fresh build jar file for production deployment to get
changes in project take effect.


18:30 - visit build projects< codebuild< Developer Tools link: https://ap-south-1.console.aws.amazon.com/codesuite/codebuild/projects/employee-service-build-project/details



for adding support for docker images inside CodePipeline for build process and testing while build

21:34 - Reason to unable pull docker images since docker has limited its download limit for anonymous users

Solution: provide your docker login credentials to fix this and the way is specify it in your buildspec.yml file as env variable and specify env variable value inside the CodeBuild Environment using the edit option of that build instance
(CodeBuild Dashboard left section menu > Build> Build Projects> "choose your build service project" > Edit> Environment> Additional Config> Add Environment variables for Docker Credential)

28:26 - creating pipeline for dev and basic setup for it

L8.5
6:46 - two types/ways of development procedures

7:39 - why use validate config in hibernate ddl auto property

